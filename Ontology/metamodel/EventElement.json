{
    "@context": "dtmi:dtdl:context;2",
    "@id": "dtmi:digitaltwins:aas:EventElement;1",
    "@type": "Interface",
    "displayName": "Event Element",
    "description": "Defines the necessary information for sending or receiving events",
    "extends": ["dtmi:digitaltwins:aas:SubmodelElement;1"],
    "comment": "According Industry 4.0 specification at https://wiki.eclipse.org/BaSyx_/_Documentation_/_AssetAdministrationShell",
    "contents": [
        {
            "@type": "Relationship",
            "name": "observableReference",
            "displayName": "Observable Reference",
            "description": "Reference to the Referable, which defines the scope of the event. Can be AAS, Submodel, SubmodelElementCollection or SubmodelElement",
            "comment": "Mandatory",
            "maxMultiplicity": 1,
            "writable": true,
            "target": "dtmi:digitaltwins:aas:Reference;1"
        }, 
        {
            "@type": "Property",
            "name": "direction",
            "displayName": "Direction",
            "writable": true,
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "Input",
                        "enumValue": "Input"
                    },
                    {
                        "name": "Output",
                        "enumValue": "Output"
                    }
                ]
            }
        }, 
        {
            "@type": "Property",
            "name": "state",
            "displayName": "State",
            "description": "State information",
            "writable": true,
            "schema": {
                "@type": "Enum",
                "valueSchema": "string",
                "enumValues": [
                    {
                        "name": "On",
                        "enumValue": "On"
                    },
                    {
                        "name": "Off",
                        "enumValue": "Off"
                    }
                ]
            }
        },
        {
            "@type": "Property",
            "name": "messageTopic",
            "displayName": "Message topic",
            "description": "nformation for the outer message infrastructure for scheduling the event to the respective communication channel.",
            "writable": true,
            "schema": "string"
        },
        {
            "@type": "Relationship",
            "name": "messageBroker",
            "displayName": "Message broker",
            "description": "Information, which outer message infrastructure shall handle messages for the EventElement. Refers to a Submodel, SubmodelElementCollection, which contains  DataElements describing the proprietary specification for the message broker",
            "writable": true,
            "maxMultiplicity": 1,
            "target": "dtmi:digitaltwins:aas:Reference;1"
        },
        {
            "@type": "Property",
            "name": "lastUpdate",
            "displayName": "Last Updated at",
            "description": "Timestamp in UTC, when the last event was received (input direction) or sent (output direction).",
            "writable": true,
            "schema": "dateTime"
        }, 
        {
            "@type": "Property",
            "name": "minInterval",
            "displayName": "Minimum Interval",
            "description": "For input direction, reports on the maximum frequency, the software entity behind the respective Referable can handle input events. For output events, specifies the maximum frequency of outputting this event to an outer infrastructure. Might be not specified, that is, there is no minimum interval",
            "writable": true,
            "schema": "dateTime"
        },
        {
            "@type": "Property",
            "name": "maxInterval",
            "displayName": "Maximum Interval",
            "description": "For input direction, reports on the maximum frequency, the software entity behind the respective Referable can handle input events. For output events, specifies the maximum frequency of outputting this event to an outer infrastructure. Might be not specified, that is, there is no minimum interval",
            "writable": true,
            "schema": "dateTime"
        }
    ]
}